# Generated by Django 5.0.2 on 2024-06-11 10:30

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=50, null=True, verbose_name='Фамилия')),
                ('email', models.EmailField(blank=True, max_length=60, null=True, validators=[django.core.validators.EmailValidator()])),
                ('phone', models.CharField(max_length=15, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=60, null=True, verbose_name='Статус')),
                ('date', models.DateField()),
                ('start_time', models.TimeField(verbose_name='Начало')),
                ('end_time', models.TimeField(verbose_name='Конец')),
                ('duration', models.CharField(blank=True, max_length=60, verbose_name='Продолжительность')),
                ('price', models.PositiveSmallIntegerField(verbose_name='Стоимость бани')),
                ('services_price', models.PositiveIntegerField(default=0, verbose_name='Цена услуг')),
                ('full_price', models.PositiveIntegerField(verbose_name='Стоимость заказа')),
                ('amount', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2)], verbose_name='Количество часов')),
                ('source', models.CharField(blank=True, max_length=60, null=True, verbose_name='Источник')),
                ('full_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='Полное имя')),
                ('comment', models.CharField(blank=True, max_length=60, null=True, verbose_name='Комментарий')),
                ('tag', models.CharField(blank=True, max_length=200, null=True, verbose_name='Примечание')),
                ('people_count', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Кол-во чел.')),
                ('prepayment', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Предоплата')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bath.customer', verbose_name='Гость')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Бронирования',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество')),
                ('price', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Цена')),
                ('slug', models.SlugField(max_length=60)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Аксессуар',
                'verbose_name_plural': 'Аксессуары',
                'ordering': ('id',),
                'index_together': {('name', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='AppointmentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.CharField(max_length=50, verbose_name='цена')),
                ('total_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Стоимость')),
                ('quantity', models.CharField(blank=True, max_length=15, null=True, verbose_name='количество')),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='bath.appointment', verbose_name='Заказ')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='appointment_items', to='bath.product')),
            ],
            options={
                'verbose_name': 'Услуга в заказе',
                'verbose_name_plural': 'Услуги в заказе',
            },
        ),
        migrations.CreateModel(
            name='Rotenburo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(max_length=16, verbose_name='Начало')),
                ('end_time', models.CharField(max_length=16, verbose_name='Конец')),
                ('amount', models.PositiveIntegerField(verbose_name='Количество часов')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Стоимость')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rotenburos', to='bath.appointment', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Ротенбуро',
                'verbose_name_plural': 'Ротенбуры',
            },
        ),
    ]
